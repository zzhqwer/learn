1.什么是DOM
    文档对象模型（Document Object Model，简称DOM，），是W3C组织推荐的处理可扩展标记语言（HTML，XML）的标准编程接口.
    DOM树
        文档：一个页面就是一个文档，DOM中使用document表示
        元素：页面中的所有标签都是元素，DOM中使用element表示
        节点：网页中的所有内容都是节点（标签、属性、文本、注释等），DOM中使用node表示
        DOM把以上内容都看做是对象

        console.dir  打印我们返回的元素对象 更好的查看里面的属性和方法；
    
属性
	1.获取属性
		element.属性   这是获取自身的属性
		element.getAttribute('属性'); 获取自定义属性	2.创建属性
		element.setAttribute('属性'，值)；设置自定义属性  一般以data-* 开头

节点获取
	element.parentNode  获取父亲节点
	parentNode.children  获取子节点
	element.nextSibling    获取兄弟节点 下一个
	element.previousSibling  获取兄弟节点上一个
创建节点
	1.创建节点 document.createElement('节点');
	2.添加节点 node.appendChild('child') node 父级child 是子级  ；类似于数组的push方法；
	    append：追加
    3.添加节点  node.insertBefore(child,指定元素);
        var lili = document.createElement('li');
        ul.insertBefore(lili,ul,children[0]);;
    4.我们想要页面添加一个新的元素；1 .创建元素  2.添加元素
DOM 重点核心
    1.对于javaScript,为了能够使JavaScript操作HTML，JavaCript就有了一套自己的DOM编程接口，
    2.对于HTML,dom使得html形成了一颗dom树，包含文档、元素、节点
        我们获取的DOM元素时一个对象（Object），所以称为文档对象模型
    关于dom操作，我们主要针对与元素的操作。主要有创建、增、删、改、查、属性操作、事件操作。
        1、创建
            document.write();
            innerHTML;
            createElement();
        2.增
            appendChild（）在后面添加
            inserBefore（）在什么之前插入；
        3.删
            removeChild（）
        4.改
            主要修改dom的元素属性，dom元素的内容、属性、表单的值等；
                修改元素属性：src、href、title等
                修改普通元素内容：innerHTML、innerText
                修改表单元素：value、type、disabled等
                修改元素样式：style、className
        5.查
            主要获取查询dom的元素
            DOM提供的dom的API方法：getElementById、getElmentsByTagName 古老方法不推荐
            H5提供的新方法：querySelector、querySelectorAll 提倡
            利用节点操作获取元素：父（parentNode）、子（children）、兄（previousSibling、nextSibling）提倡
        6.属性操作
            主要是自定义属性
            setAttribute：设置dom的属性值
            getAttribute: 得到dom的属性值
            removeAttribute： 移除属性  
        7.事件操作
            给元素注册事件、采取事件源.事件类型 = 事件处理程序
            onclick : 鼠标点击左键触发
            onmouseover :  鼠标经过触发
            onmouseout  :  鼠标离开触发
            onfocus     :  获得鼠标焦点触发
            onblur      :  失去鼠标焦点触发
            onmousemove :  鼠标移动触发
            onmouseup   :  鼠标弹起触发
            onmousedown :  鼠标按下触发
            
事件高级
        注册事件的两个方法
        // 注册事件
        // 给元素添加事件，称为注册事件或者绑定时间；
        // 注册事件有两种方式：传统方式和方法监听注册事件
        // 传统注册方式
            // 利用on开头的事件onclick
            // 特点：注册事件的唯一性
            // 同一个元素同一个事件只能设置一个处理函数，最后注册的处理函数将会覆盖前面注册的处理函数
        // 方法监听注册方式
            //w3c标准推荐方式
            //addEventListener()它是一个方法
            //IE9之前的IE不支持此方法，可使用attachEvent（）代替； 
            //特点：同一个元素同一个事件可以注册多个处理函数
            //按注册的顺序依次注册

